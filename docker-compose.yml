version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: cb_grok_postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cb_grok_network

  grafana:
    image: grafana/grafana:latest
    container_name: cb_grok_grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      # PostgreSQL datasource environment variables
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_METRICS_DB:-grok_metrics}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_SSLMODE=${POSTGRES_SSLMODE:-disable}
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - postgres
    networks:
      - cb_grok_network

  demo_trader:
    container_name: cb_grok_demo_trader
    build:
      context: .
      dockerfile: Dockerfile_demotrade
    environment:
      - CONFIG_PATH=./config/config.yaml
    volumes:
      - ./config/config.yaml:/config/config.yaml
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - cb_grok_network

volumes:
  postgres_data:
  grafana_data:

networks:
  cb_grok_network:
    driver: bridge
